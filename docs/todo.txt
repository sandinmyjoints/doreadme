TODO
====
X Install git, git init

X Install sqlite for ipython history (note this in instructions for setting up an image)

X scrape 12 sites, get at least 100 stories

X make links to navigate through days, 

* Day picker

* Get contact form into modal dialog

* feedback/include your journal link

* Journal infrastructure, views, templates, links

* design and branding.

* EXTEND THE VERTICAL BARS TO COVER YESTERDAY' STORY, RANDOM, THIS MONTH, ETC

* cssSandpaper

X fonts: http://www.google.com/webfonts#UsePlace:use/Collection:Bitter:400,700|Crimson+Text:400,400italic,700

* figure out hosting

* classify story genres manually

* schedule stories for a few weeks and setup reminder to do more

* launch.

* Setup remote git repo at webfaction, or on github

* use celery to automatically schedule the next day's story

* Different versions of site for different personas

* Adwords

* Add Disqus? Add share links

* Add user accounts, taste preferences, etc

* User accounts, favorite stories, story ratings, open story links in a new tab or in an iframe or something like that, so they stay on the site

* Where on the VM filesystem can I move files to OS X, and vice versa?

X Get unit testing working with postgres

* News page

* Write unit tests

* Write Selenium tests

* Object-oriented CSS, what was it called? Ask Bill?

* Logging

* Crawler hints: if story urls fit a certain pattern, can ignore_hints or not 

X Figure out why postgres sometimes crashes during schema migration 

* Figure out how to classify story vs poetry, esp for Anomalous

* favicon

* icons/images for journals


X How to have a concept of today's story--
Day model that has year, month, day, story fields
and an instance for every day. Use that to schedule stories through the admin and programmatically. 

Algorithm to schedule stories:
Whenever a new day is first viewed, create the Day and find a random unfeatured story to associate with it. 

So maybe we do have a Day object. When Day is created:
 pull a random Story 
 check that it's not from a journal that was featured recently or by an author that was featured recently
 save itself
 view consults today's Day 

View algorithm:
Select today's date Day from Day. 
If it doesn't exist:
 select a random Story that hasn't been featured, 
 create a Day for today
 point today's Day to selected Story
Show the Story that today's Day points to.

= Path to Launch =

1. Write celery task to select new stories for days ahead of time

2. Install Google Analytics

3. Manually scrub the existing stories. Record patterns for use in future crawling.

4. Put in Chrome app-specific files 

4. Deploy site to webfaction.



