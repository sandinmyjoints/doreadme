TODO
====
X Install git, git init

X Install sqlite for ipython history (note this in instructions for setting up an image)

* scrape 12 sites, get at least 100 stories

* Figure out how to classify story vs poetry, esp for Anomalous

X make links to navigate through days, 

* design and branding.

* feedback/include your journal link

* figure out hosting

* schedule stories for a few weeks and setup reminder to do more

* launch.

* use celery to automatically schedule the next day's story

* Where on the VM filesystem can I move files to OS X, and vice versa?

* Get unit testing working with postgres

* Logging

* Crawler hints: if story urls fit a certain pattern, can ignore_hints or not 

* Journal infrastructure, views, templates

* Figure out why postgres sometimes crashes during schema migration 

* favicon

* icons/images for journals

* User accounts, favorite stories, story ratings, open story links in a new tab or in an iframe or something like that, so they stay on the site

* How to have a concept of today's story--
Day model that has year, month, day, story fields
and an instance for every day. Use that to schedule stories through the admin and programmatically. 

Algorithm to schedule stories:
Whenever a new day is first viewed, create the Day and find a random unfeatured story to associate with it. 

So maybe we do have a Day object. When Day is created:
 pull a random Story 
 check that it's not from a journal that was featured recently or by an author that was featured recently
 save itself
 view consults today's Day 

View algorithm:
Select today's date Day from Day. 
If it doesn't exist:
 select a random Story that hasn't been featured, 
 create a Day for today
 point today's Day to selected Story
Show the Story that today's Day points to.

